# В большой текстовой строке подсчитать количество встречаемых слов
# и вернуть 10 самых частых. Не учитывать знаки препинания и регистр символов.
# За основу возьмите любую статью из википедии или из документации к языку.


TEXT = """Поисковые организации часто сетуют на то, что людей можно было бы 
найти гораздо быстрее, если бы операторы своевременно выдавали данные о 
пользователе и его нахождении. Однако это не совсем так: есть законы, 
защищающие информацию, и в них прописан четкий процессуальный порядок, 
который нужно соблюдать без возможности иначе пройти данную процедуру. 
С другой стороны, даже если представить, что в определенных ситуациях 
будет разработана система оперативной передачи данных поисковым отрядам, 
то это не решает проблему должным образом. Дело в том, что данные сотовой 
связи не могут позволить определить конкретную точку на карте. С помощью 
них можно лишь выделить некий квадрат, в котором предположительно будет 
находиться пропавший пользователь с мобильным телефоном. Иными словами, 
если человек пропал в лесу, оператор укажет его нахождение именно в этом 
лесу, а не в соседнем, но более точной информации предоставить не сможет. 
В таком случае поисковой организации остается разыскивать человека по всему 
лесному массиву, что непродуктивно в ситуациях опасности для жизни пропавшего. 
К тому же зачастую те, кто поддерживал связь с пропавшим до происшествия, 
и так могут знать, в каком районе или местности он заблудился. ."""

clear_text = TEXT.replace(",", " ").replace("—", "").replace(".", ""). \
    replace("!", "").replace("?", "").replace('"', '').replace("«", '').replace(
    "»", '').lower().split()

dict_text = {}

for word in clear_text:
    dict_text[word] = clear_text.count(word)

new_dict_text = {}
sort_dict = sorted(dict_text, key=dict_text.get, reverse=True)
count = 0

for word in sort_dict:
    new_dict_text[word] = dict_text[word]
    count += 1
    if count < 10:
        continue
    else:
        break

print(new_dict_text)